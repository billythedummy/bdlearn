#include "Model_test.hpp"

using namespace bdlearn;

int test_Model() {
    const int in_w = 5;
    const int in_h = 5;
    const int in_c = 3;
    const int batch = 5;
    const int classes = 3;
    // define model
    Model dut(in_w, in_h, in_c, true);
    dut.append_batch_norm();
    dut.append_bconv(3, 1, 7);
    dut.append_batch_norm();
    dut.append_bconv(3, 1, classes);
    dut.loss_softmax_cross_entropy();
    // make fake data
    float X [in_w*in_h*in_c*batch] = {
        -9.99965565e-01,  8.45388325e-01,  6.74331330e-01, -7.38091775e-01,
       -3.63682078e+00,  1.68532510e-01, -1.98723165e+00,  1.03759164e+00,
        2.46230592e+00, -1.83336403e-01,  8.05785977e-01,  1.39716038e+00,
       -2.32299526e+00,  5.20643606e-01, -1.06065731e+00, -5.79321022e-01,
       -1.41371707e+00, -1.40659226e+00,  5.10993395e-01, -7.60653825e-01,
        1.33932556e+00,  7.15760752e-01, -2.56861551e-01, -1.34666591e+00,
       -4.99031323e-01, -2.69293923e-01,  1.29800880e+00, -4.85356418e-01,
        9.38016332e-02, -5.40054151e-01, -7.43496613e-01, -4.04642316e-01,
        1.15894323e-01, -4.43442123e-01,  2.11812605e+00, -1.92036707e+00,
       -5.53383908e-02,  1.04914395e+00,  3.15106082e-01, -5.65518247e-01,
        5.77346082e-01, -7.83278293e-01,  1.18682432e-01,  1.94073126e-01,
        7.19288969e-03, -1.45999959e-01,  8.11361748e-01,  9.74201015e-02,
        6.94519953e-01,  1.01989435e-02,  3.65005196e-01, -1.13921561e+00,
       -7.99562037e-01, -6.10788124e-01, -1.47055681e+00,  1.23115298e-01,
        9.28634895e-01,  8.48979195e-01,  4.36952657e-02, -1.02305867e-01,
       -7.80076412e-01, -5.88086376e-01,  1.40266008e+00,  1.20582290e+00,
        8.63773446e-02, -1.27836069e-01, -5.79442806e-01,  3.60710069e-02,
        1.27346825e+00,  7.95503891e-01, -5.03137035e-01,  9.55771726e-01,
        1.51766069e+00,  5.19121934e-01,  6.46977510e-01, -2.85140039e-01,
        3.94098620e-01,  2.74241590e+00, -4.26995387e-01, -7.87355466e-01,
        1.42646278e+00, -8.97702443e-02,  1.92877807e-01,  3.61385391e-01,
        1.71031011e-01,  2.57208623e-01,  4.08473701e-01, -5.74143184e-02,
       -9.53008984e-02,  2.60449968e-01,  4.46848747e-01,  2.84253101e-01,
       -5.15667087e-01,  8.29634448e-02,  4.43097072e-01, -2.05399460e+00,
        1.08401795e+00, -1.22156247e+00, -9.97470074e-01, -1.70040584e+00,
       -4.60558394e-01, -8.39788273e-02, -2.23418594e-01,  1.95312496e-01,
        9.59065422e-01, -1.04606848e-01, -2.27090982e-01,  4.33127632e-01,
        4.33499879e-02, -1.44615943e+00,  1.61431828e+00,  9.97834177e-01,
        5.55365369e-01, -4.61333791e-01,  5.82778277e-02, -3.85693050e-02,
        4.86380990e-01,  8.48259886e-01,  2.25678230e-01, -5.92573947e-01,
        1.45788874e-01,  3.70811751e-01,  2.90900285e-03,  6.59172177e-01,
       -2.48584973e-01, -1.84920306e+00,  3.24566239e-01,  4.79682860e-01,
        6.19587844e-01,  1.67370702e-02, -4.31139591e-01, -5.75012082e-01,
        6.73641035e-01, -1.26046731e+00,  1.95509741e+00, -1.67186447e+00,
       -2.21350299e-01, -1.10678043e+00, -1.65234872e+00, -8.43205017e-01,
        1.76088957e-01, -1.72836228e+00, -6.70540077e-01, -1.41926475e+00,
       -9.45134474e-02, -3.25096881e-01,  2.26902694e+00,  1.07010693e+00,
       -1.37201516e+00,  6.27764038e-01, -9.47255712e-01,  9.33797211e-02,
        6.61668954e-01, -1.25636162e-01, -8.82284275e-01, -1.45010346e-01,
        1.01341980e+00, -2.97038038e-01,  1.34244135e+00,  9.15117926e-01,
        7.56415368e-03, -2.39523821e+00, -5.80377432e-01, -3.34289352e-01,
        4.39184538e-01, -2.11220888e+00,  2.15595554e+00,  9.28942613e-01,
       -1.36144376e+00,  5.86183024e-01, -3.55698579e-01,  5.38937209e-01,
       -9.06462705e-01,  1.66743645e+00,  6.77884819e-02, -2.26356882e-01,
       -1.28109230e+00, -4.61021632e-01,  3.08772247e-01, -2.37319294e+00,
       -1.12938901e+00,  2.92449257e-01, -2.05506240e+00, -7.73274206e-01,
       -4.24661550e-01,  1.51683340e+00,  3.83385248e-01,  2.20390776e-01,
       -1.56106960e+00, -1.10604322e+00, -3.01782891e-01,  4.43597126e-01,
        1.30371141e+00, -1.37281917e+00, -2.43827091e-01, -2.65947235e-01,
       -4.45640185e-01, -5.37335136e-01,  9.97817859e-01, -7.59643606e-01,
        2.18793808e-01, -3.65809019e-01, -2.74470068e-01, -2.84995404e-01,
        8.83211880e-02, -1.35401682e+00, -1.10540282e+00,  1.23005934e-01,
        1.65209839e+00, -1.22828859e+00,  2.59592608e-01, -4.93223531e-01,
       -1.12238964e-01, -5.97341391e-01,  6.81973912e-01, -9.69043378e-01,
       -5.21698849e-01, -1.36565004e+00,  1.67134120e-01,  1.82170273e-01,
       -2.02870209e-01, -8.27150708e-02, -1.27773233e+00,  1.88139664e+00,
       -6.71426307e-01,  5.86089425e-02,  5.55129133e-01,  4.61338233e-01,
       -6.12110147e-01, -9.09689055e-01, -1.76862216e+00,  3.76499593e-01,
       -2.59445651e-01, -3.08455057e-01,  7.56656489e-01,  1.18056840e+00,
       -1.29276498e+00,  6.42719148e-01,  1.55390351e+00,  4.53047133e-01,
        1.82567922e+00, -5.26403151e-01, -6.52011947e-01,  1.08527898e-01,
        7.81013317e-01, -5.96018475e-01, -1.73888210e-02,  5.58947422e-01,
        7.07781874e-02,  9.77506162e-01,  7.33078788e-03,  2.13016948e+00,
       -1.73608160e+00,  8.75543146e-02, -9.96748307e-01,  3.67552242e-01,
       -1.94495609e+00,  4.78007573e-01, -6.52110713e-01,  8.83724588e-01,
       -3.11912719e-01,  1.41447850e+00, -7.00772508e-01, -1.16191207e+00,
        1.39543749e+00,  2.04616928e-01,  4.35245742e-01, -2.88709900e-01,
        1.26884693e+00, -2.11546125e-01, -1.27440588e+00,  2.30623709e-01,
       -8.63608150e-02,  4.31757811e-01, -1.05014303e+00, -5.05341039e-01,
       -2.01419254e-01, -1.33912788e-03,  5.53586691e-01, -9.09338688e-01,
        3.04981327e-01, -7.77168092e-01, -2.82883212e-01, -6.76492490e-01,
        1.77260223e-01, -1.54614335e+00,  1.21810263e+00,  4.98552841e-01,
        3.94957694e-01, -1.11282243e-01,  2.32470707e-01,  1.08655189e+00,
       -1.17147963e+00, -1.03580445e-01,  8.80030085e-01, -6.93557421e-01,
        7.01314077e-01, -3.79159083e-01,  5.79140688e-01,  1.64970686e+00,
        1.03621226e+00,  1.33584989e+00,  1.81896673e+00, -1.99634965e+00,
        8.50385309e-01,  9.74172321e-01, -1.70716032e-02, -5.84927228e-01,
        8.71091054e-01,  6.66918592e-01,  2.08489225e-01,  4.79190460e-01,
        9.49829022e-01,  9.39238025e-01,  6.11510241e-02, -7.96962941e-01,
       -3.21214544e-01, -3.70856325e-01,  1.21341172e+00,  6.19981520e-01,
       -3.26230331e-01,  8.29556485e-01,  4.23655966e-01, -1.18466838e+00,
       -1.28720478e+00,  1.66334472e+00,  5.15618342e-01,  6.40261602e-01,
        3.67332285e-01, -1.37313202e+00, -2.69830858e+00,  6.54696691e-01,
       -2.61188414e+00,  2.23697341e-01,  3.10727721e-01,  1.03866089e+00,
        2.51083694e-01,  6.29476689e-01, -6.90936725e-01, -1.15993018e+00,
       -5.69320048e-01, -1.43219213e+00,  1.12394196e+00,  1.61561072e+00,
       -3.76746569e-01,  4.03145087e-01, -7.08098816e-01, -1.33515274e+00,
        1.05389686e+00,  6.68158954e-01, -8.83361150e-01, -9.95162379e-02,
       -3.49937808e-01, -1.24216441e+00, -1.16479518e+00,  4.03758944e-01,
        1.33106764e+00, -1.80904124e-01, -5.24512250e-01,  8.50737747e-02,
       -4.67551676e-01,  1.09504878e+00,  5.61498007e-01, -1.48404813e+00,
       -1.12929707e+00,  1.14314220e+00,  1.80510476e-01,  6.77934331e-01,
        1.08505642e+00, -1.70788506e-01, -7.98545007e-01,  8.98085623e-01,
       -1.05118939e+00,  9.67776845e-01,  8.02794711e-01
    };
    float Y [classes*batch] = {
        1, 0, 0,
        1, 0, 0,
        0, 0, 1,
        0, 1, 0,
        0, 0, 1
    };
    // test full
    Halide::Buffer<float> X_view(X, in_w, in_h, in_c, batch);
    Halide::Buffer<float> Y_view(Y, classes, batch);
    dut.set_lr(1E-5f);
    for (int i = 0; i < 20; ++i) {
        float loss = dut.train_step(X_view, Y_view);
        std::cout << "Loss: " << loss << std::endl;
    }
    
    return 0;
}